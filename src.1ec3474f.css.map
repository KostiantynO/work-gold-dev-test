{"version":3,"sources":["sass/utils/_variables.scss","sass/base/_common.scss","sass/base/_body.scss","sass/base/_section.scss","sass/utils/_mixins.scss","sass/base/_container.scss","sass/base/fonts/_fonts.scss","sass/layout/_header.scss","sass/layout/_hero.scss"],"names":[],"mappings":"AAAA,MACE,uBAAA,CACA,4CAAA,CACA,gDAAA,CAEA,oBAAA,CACA,yBAAA,CACA,yBAAA,CACA,sBAAA,CACA,oBAAA,CACA,sBAAA,CACA,oBAAA,CACA,oBAAA,CACA,+BCbF,KACE,sBAGF,iBAGE,mBAGF,0BASE,YAAA,CACA,gBAGF,MAEE,eAGF,IACE,aAAA,CACA,cAAA,CACA,WAAA,CACA,cAGF,EACE,oBAAA,CACA,cCrCF,KACE,eAAA,CACA,kBAEA,eACE,kBAIJ,KACE,iBAAA,CAEA,eAAA,CACA,QAAA,CACA,eAAA,CAEA,uCAAA,CACA,cAAA,CACA,2BAEA,eACE,kBCrBJ,SCmGQ,gBAAA,CAAA,oBA9CJ,oCDrDJ,SCmGQ,gBAAA,CAAA,qBCnGR,WDmGQ,kBAAA,CAAA,kBA9CJ,oCCrDJ,WD+IQ,iBAAA,CAAA,gBAAA,CC5IJ,iBDkDA,oCCrDJ,WAOI,iBCPJ,WACE,qBAAA,CACA,iBAAA,CACA,eAAA,CACA,qHAIF,WACE,qCAAA,CACA,iBAAA,CACA,eAAA,CACA,+LAKF,WACE,oCAAA,CACA,iBAAA,CACA,eAAA,CACA,4LCrBF,MACE,aH0CI,oCG3CN,MAII,qBAAA,CACA,UHgDA,oCGrDJ,MASI,cAAA,CACA,UAIJ,oBACE,kBAGF,YACE,sCAAA,CHjBY,cGkBE,CHjBF,eGiBQ,CHhBI,iBAAA,CGkBxB,iBAAA,CACA,yBCvBF,SACE,YAAA,CAGA,qBAAA,CACA","file":"src.1ec3474f.css","sourceRoot":"../src","sourcesContent":[":root {\n  --main-font: 'Ogg-Roman';\n  --secondary-font: 'TradeGothicLTStd Extended';\n  --secondary-font-bold: 'TradeGothicLTStd BoldExt';\n\n  --color-primary: #000000;\n  --color-footer-bg: #f2f2f2;\n  --color-dark-blue: #1b2b48; // star\n  --color-orange: #fc8750; // square / circle,  5edges\n  --color-star: #fb8547;\n  --color-yellow: #f2cf26; //  square / circle\n  --color-pink: #f4bab5; // circle, triangle\n  --color-haki: #82a08b; // rod,\n  --color-live-indicator: #b3f695;\n}\n\n$padding: 15px;\n","html {\n  box-sizing: border-box;\n}\n\n*,\n::before,\n::after {\n  box-sizing: inherit;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nul,\nol {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nul,\nol {\n  padding-left: 0;\n}\n\nimg {\n  display: block;\n  max-width: 100%;\n  height: auto;\n  margin: 0 auto;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n}\n","html {\n  min-height: 100%;\n  overflow-y: scroll;\n\n  &.no-scroll {\n    overflow-y: hidden;\n  }\n}\n\nbody {\n  position: relative;\n\n  min-height: 100%;\n  margin: 0;\n  overflow: hidden;\n\n  font-family: var(--main-font), sans-serif;\n  font-size: 16px;\n  color: var(--color-primary);\n\n  &.no-scroll {\n    overflow-y: scroll;\n  }\n}\n",".section {\n  @include paddings($pt: 30px, $pb: 30px);\n  @include mq($tablet, $pt: 50px, $pb: 50px);\n}\n","// prettier-ignore\n@mixin font($fs: null, $fw: null, $lh: null, $ls: null) {\n  @if ($fs) { font-size:      $fs; }\n  @if ($fw) { font-weight:    $fw; }\n  @if ($lh) { @if ($fs) { line-height: round(1000 * $lh / $fs) / 1000; }\n                @else   { line-height: $lh; } }\n  @if ($ls) { letter-spacing: $ls; }\n} //14px, 400, 1.71, 0.03em default\n// ------------------------- START 'MIXINS' -------------------------\n\n// .box { @include bg-retina('./image.jpg'); }\n@mixin bg-retina($url: null) {\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n    background-image: url('#{$url}');\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n  }\n}\n\n// Media Query + Margins + Paddings\n// prettier-ignore\n@mixin mq(\n  $start: null, $end: null,\n  $mt: null, $mr: null, $mb: null, $ml: null,\n  $pt: null, $pr: null, $pb: null, $pl: null\n) {\n  @if ($end and map_has_key($breakpoints, $end)) {\n    $maxWidth: map_get($breakpoints, $end);\n    $upToMaxWidth: $maxWidth - 1px;\n\n    @if ($start and map_has_key($breakpoints, $start)) {\n      $minWidth: map_get($breakpoints, $start);\n\n      @media screen and (min-width: $minWidth) and (max-width: $upToMaxWidth) {\n        @include paddings($pt, $pr, $pb, $pl);\n        @include margins($mt, $mr, $mb, $ml);\n\n        @content;\n      }\n    } @else {\n      @media screen and (max-width: $upToMaxWidth) {\n        @include paddings($pt, $pr, $pb, $pl);\n        @include margins($mt, $mr, $mb, $ml);\n\n        @content;\n      }\n    }\n  } @else if ($start and map_has_key($breakpoints, $start)) {\n    $minWidth: map_get($breakpoints, $start);\n\n    @media screen and (min-width: $minWidth) {\n        @include paddings($pt, $pr, $pb, $pl);\n        @include margins($mt, $mr, $mb, $ml);\n\n      @content;\n    }\n  }\n}\n\n// Padding converter\n@mixin paddings($pt: null, $pr: null, $pb: null, $pl: null) {\n  @if ($pt or $pr or $pb or $pl) {\n    @if (\n      ($pt == $pr) and\n        ($pt == $pb) and\n        ($pt == $pl) and\n        (($pt and $pr and $pb and $pl) != null)\n    ) {\n      padding: $pt;\n    } @else if (($pt == $pb) and ($pr == $pl) and (($pt and $pr) != null)) {\n      padding: $pt $pr;\n    } @else if\n      (\n        (\n            (($pt != $pb) and (($pt and $pb) != null)) and\n              (($pr == $pl) and ($pr != null))\n          ) or\n          (\n            (($pr != $pl) and (($pr and $pl) != null)) and\n              (($pt == $pb) and ($pt != null))\n          )\n      )\n    {\n      padding: $pt $pr $pb;\n    } @else if\n      (\n        (($pt != $pb) and (($pt and $pb) != null)) and\n          (($pr != $pl) and (($pr and $pl) != null))\n      )\n    {\n      padding: $pt $pr $pb $pl;\n    } @else {\n      // prettier-ignore\n      $paddings: ('top': $pt, 'right': $pr, 'bottom': $pb, 'left': $pl,);\n      // prettier-ignore\n      @each $side, $direction in $paddings { @if map-get($paddings, $side) {\n        #{padding-#{$side}}: map-get($paddings, $side); }}\n    }\n  }\n\n  @content;\n}\n\n// Margin converter\n@mixin margins($mt: null, $mr: null, $mb: null, $ml: null) {\n  @if ($mt or $mr or $mb or $ml) {\n    @if (\n      ($mt == $mr) and\n        ($mr == $mb) and\n        ($mb == $ml) and\n        (($mt and $mr and $mb and $ml) != null)\n    ) {\n      margin: $mt;\n    } @else if (($mt == $mb) and ($mr == $ml) and (($mt and $mr) != null)) {\n      margin: $mt $mr;\n    } @else if\n      (\n        (\n            (($mt != $mb) and (($mt and $mb) != null)) and\n              (($mr == $ml) and ($mr != null))\n          ) or\n          (\n            (($mr != $ml) and (($mr and $ml) != null)) and\n              (($mt == $mb) and ($mt != null))\n          )\n      )\n    {\n      margin: $mt $mr $mb;\n    } @else if\n      (\n        (($mt != $mb) and (($mt and $mb) != null)) and\n          (($mr != $ml) and (($mr and $ml) != null))\n      )\n    {\n      margin: $mt $mr $mb $ml;\n    } @else {\n      // prettier-ignore\n      $margins: ('top': $mt, 'right': $mr, 'bottom': $mb, 'left': $ml,);\n      // prettier-ignore\n      @each $side, $direction in $margins { @if map-get($margins, $side) {\n        #{margin-#{$side}}: map-get($margins, $side); }}\n    }\n  }\n\n  @content;\n}\n\n/// MIXIN FOR TRANSITION\n@mixin transition {\n  transition: var(--time) var(--cubic);\n}\n\n/* -------------------------- END 'MIXINS' -------------------------- */\n",".container {\n  @include paddings($pr: $padding, $pl: $padding);\n  @include mq($mobile, $mr: auto, $ml: auto) {\n    max-width: map-get($breakpoints, $mobile) + 2 * $padding;\n  }\n\n  @include mq($tablet) {\n    max-width: map-get($breakpoints, $tablet) + 2 * $padding;\n  }\n}\n","@font-face {\n  font-family: 'Ogg-Roman';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Ogg'), local('Ogg-Roman'),\n    url('../fonts/Ogg-Roman.otf') format('opentype');\n}\n\n@font-face {\n  font-family: 'TradeGothicLTStd Extended';\n  font-style: normal;\n  font-weight: 400;\n  src: local('TradeGothicLTStd, Extended'), local('TradeGothicLTStd-Extended'),\n    local('TradeGothicLTStd Extended'),\n    url('../fonts/TradeGothicLTStd-Extended.otf') format('opentype');\n}\n\n@font-face {\n  font-family: 'TradeGothicLTStd BoldExt';\n  font-style: normal;\n  font-weight: 700;\n  src: local('TradeGothicLTStd, BoldExt'), local('TradeGothicLTStd-BoldExt'),\n    local('TradeGothicLTStd BoldExt'),\n    url('../fonts/TradeGothicLTStd-BoldExt.otf') format('opentype');\n}\n",".menu {\n  display: flex;\n\n  @include mq($end: $tablet) {\n    flex-direction: column;\n    gap: 20px;\n  }\n\n  @include mq($tablet) {\n    flex-wrap: wrap;\n    gap: 35px;\n  }\n}\n\n.header__logo-thumb {\n  margin-bottom: 8px;\n}\n\n.menu__link {\n  font-family: var(--secondary-font-bold);\n  @include font(11px, 700, 13px);\n\n  text-align: center;\n  text-transform: uppercase;\n}\n",".hero-bg {\n  height: 240px;\n  // Путь к изображениям из SASS-файла всегда такой, как из папки css\n  // background-image: url('../images/demo.jpg');\n  background-size: cover;\n  background-position: center;\n}\n"]}